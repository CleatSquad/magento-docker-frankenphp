#!/usr/bin/env bash
set -o errexit

# Determine the appropriate Docker Compose command based on availability
if docker compose version > /dev/null 2>&1; then
  DOCKER_COMPOSE="docker compose"
else
  DOCKER_COMPOSE="docker-compose"
fi

# Get the current version of Docker Compose
DOCKER_COMPOSE_VERSION=$(${DOCKER_COMPOSE} version --short 2>&1)

# Minimum required version of Docker Compose
MIN_VERSION="2.10"

# Function to compare versions, returns 0 if $1 >= $2
version_ge() {
  [ "$1" = "$(echo -e "$1\n$2" | sort -V | tail -n1)" ]
}

# Check if the current version of Docker Compose is less than the minimum required version
if ! version_ge "${DOCKER_COMPOSE_VERSION}" "${MIN_VERSION}"; then
  echo "Error: Docker Compose version (${DOCKER_COMPOSE_VERSION}) is less than the minimum required version (${MIN_VERSION}). Please update Docker Compose."
  exit 1
fi

# Proceed with the script logic based on the provided arguments
if [ "$1" == "--no-dev" ]; then
  ${DOCKER_COMPOSE} -f docker-compose.yml "${@:2}"
else
  ${DOCKER_COMPOSE} -f docker-compose.yml -f docker-compose.dev.yml "$@"
fi
